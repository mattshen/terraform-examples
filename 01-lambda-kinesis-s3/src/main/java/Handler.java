import com.amazonaws.services.lambda.runtime.Context;
import com.amazonaws.services.lambda.runtime.LambdaLogger;
import com.amazonaws.services.lambda.runtime.RequestHandler;
import com.amazonaws.services.lambda.runtime.events.KinesisEvent;
import com.amazonaws.services.s3.AmazonS3;
import com.amazonaws.services.s3.AmazonS3ClientBuilder;
import com.amazonaws.services.s3.model.ObjectMetadata;

import java.io.ByteArrayInputStream;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
public class Handler implements RequestHandler<KinesisEvent, String> {
    @Override
    public String handleRequest(KinesisEvent event, Context context) {
        LambdaLogger logger = context.getLogger();

        event.getRecords().forEach(record -> {
            String data = new String(record.getKinesis().getData().array());
            logger.log("Received data: " + data);

            String[] keyAndContent = data.split(",");
            ObjectMetadata objectMetadata = new ObjectMetadata();
            objectMetadata.setContentLength(keyAndContent[1].getBytes().length);
            AmazonS3 s3Client = AmazonS3ClientBuilder.defaultClient();
            s3Client.putObject(System.getenv("BUCKET_NAME"), keyAndContent[0],
                    new ByteArrayInputStream(keyAndContent[1].getBytes()), objectMetadata);

        });
        return null;
    }
}
